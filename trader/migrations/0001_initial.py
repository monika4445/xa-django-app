# Generated by Django 3.1.1 on 2025-01-16 12:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('referal', '0001_initial'),
        ('merchant', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BasePercentSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('percent_settings_role', models.CharField(choices=[('PROVIDER', 'Provider'), ('MERCHANT', 'Merchant'), ('TRAIDER', 'Traider')], max_length=50, verbose_name='Для кого настройка?')),
                ('deposit_percent', models.FloatField(default=0.0, verbose_name='Процент с депозита')),
                ('withdraw_percent', models.FloatField(default=0.0, verbose_name='Процент с вывода')),
                ('country', models.CharField(max_length=255, verbose_name='Регион')),
                ('currency', models.CharField(max_length=255, verbose_name='Валюта')),
                ('method', models.CharField(max_length=255, verbose_name='Метод')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сущность базовой настройки процентов',
                'verbose_name_plural': 'Сущность базовой настройки процентов',
            },
        ),
        migrations.CreateModel(
            name='BaseRateSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rate', models.FloatField(default=0.0, verbose_name='Курс')),
                ('bank', models.CharField(blank=True, max_length=255, null=True, verbose_name='Банк')),
                ('county', models.CharField(max_length=255, verbose_name='Страна')),
                ('currency', models.CharField(max_length=255, verbose_name='Валюта')),
                ('method', models.CharField(blank=True, max_length=255, null=True, verbose_name='Способ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сущность курса валют на USDT',
                'verbose_name_plural': 'Сущность курса валют на USDT',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('status', models.BooleanField(default=False, verbose_name='Активно?')),
                ('total_raward', models.FloatField(default=0.0, verbose_name='Общее кол-во вознаграждений в группе')),
                ('include_self', models.BooleanField(default=False, verbose_name='Наши трейдеры?')),
                ('self_limit', models.IntegerField(verbose_name='Суточный лимит на наших трейдеров')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сущность группы',
                'verbose_name_plural': 'Сущность группы',
            },
        ),
        migrations.CreateModel(
            name='Trader',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID Telegram')),
                ('email', models.CharField(blank=True, max_length=50, null=True, verbose_name='Почта')),
                ('hash_pass', models.CharField(blank=True, max_length=80, null=True, verbose_name='Хеш пароля')),
                ('ava_balance', models.FloatField(default=0.0, verbose_name='Актуальный баланс')),
                ('block_balance', models.FloatField(default=0.0, verbose_name='Блокированная сумма баланса')),
                ('wallet', models.CharField(blank=True, max_length=32, null=True, verbose_name='Кошелек')),
                ('day_limit', models.IntegerField(default=30, verbose_name='Лимит кол-ва сделок на день')),
                ('admin_status', models.BooleanField(default=False, verbose_name='Апрув админа на трафик')),
                ('deposit_status', models.BooleanField(default=True, verbose_name='Статус депозита')),
                ('withdraw_status', models.BooleanField(default=False, verbose_name='Статус вывода')),
                ('reward', models.FloatField(default=0.0, verbose_name='Вознаграждение')),
                ('reward_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID вознаграждения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('referal_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='referal.referaluser', verbose_name='ID реферала')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trader', to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт пользователя')),
            ],
            options={
                'verbose_name': 'Сущность трейдера',
                'verbose_name_plural': 'Сущность трейдера',
            },
        ),
        migrations.CreateModel(
            name='TraderPhone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('status', models.BooleanField(default=False, verbose_name='Устройство активно?')),
                ('is_online', models.BooleanField(default=False, verbose_name='Устройство онлайн?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trader.trader', verbose_name='Трейдер')),
            ],
            options={
                'verbose_name': 'Сущность телефона трейдера',
                'verbose_name_plural': 'Сущность телефона трейдера',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider_params', models.JSONField(blank=True, null=True, verbose_name='Параметры запроса')),
                ('status', models.BooleanField(default=False, verbose_name='Активно?')),
                ('day_limit', models.IntegerField(verbose_name='Дневной лимит')),
                ('deposit_status', models.BooleanField(default=False, verbose_name='Статус депозита')),
                ('withdraw_status', models.BooleanField(default=False, verbose_name='Статус вывода')),
                ('referal_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID реферала')),
                ('min_dep_amount', models.FloatField(default=0.0, verbose_name='Минимальный депозит')),
                ('max_dep_amount', models.FloatField(default=0.0, verbose_name='Максимальный депозит')),
                ('max_with_amount', models.FloatField(default=0.0, verbose_name='Максимальный вывод')),
                ('min_with_amount', models.FloatField(default=0.0, verbose_name='Минимальный вывод')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trader.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Сущность провайдера',
                'verbose_name_plural': 'Сущность провайдера',
            },
        ),
        migrations.CreateModel(
            name='PercentSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deposit_percent', models.FloatField(default=0.0)),
                ('withdraw_percent', models.FloatField(default=0.0)),
                ('country', models.CharField(max_length=50, verbose_name='Регион')),
                ('currency', models.CharField(max_length=50, verbose_name='Валюта')),
                ('bank', models.CharField(max_length=255, verbose_name='Банк')),
                ('method', models.CharField(max_length=255, verbose_name='Метод сделок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('merchant_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='merchant.merchant', verbose_name='Мерчант')),
                ('provider_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trader.provider', verbose_name='Провайдер')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trader.trader', verbose_name='Трейдер')),
            ],
            options={
                'verbose_name': 'Сущность настройки процентажа',
                'verbose_name_plural': 'Сущность настройки процентажа',
            },
        ),
        migrations.CreateModel(
            name='CredsTrader',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер карты')),
                ('method', models.CharField(max_length=255, verbose_name='Метод сделки')),
                ('bank', models.CharField(blank=True, max_length=255, null=True, verbose_name='Банк карты')),
                ('holder', models.CharField(blank=True, max_length=255, null=True, verbose_name='Инициалы держателя карты')),
                ('status', models.BooleanField(default=False, verbose_name='Активно?')),
                ('max_op', models.IntegerField(default=10, verbose_name='Максимальное кол-во сделок в один момент')),
                ('country', models.CharField(max_length=50, verbose_name='Регион')),
                ('currency', models.CharField(max_length=50, verbose_name='Валюта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('phone_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trader.traderphone', verbose_name='Телефон трейдера')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trader.trader', verbose_name='Трейдер')),
            ],
            options={
                'verbose_name': 'Сущность данных карт трейдера',
                'verbose_name_plural': 'Сущность данных карт трейдера',
            },
        ),
    ]
